
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .modal {
        overflow-y: auto;
    }
</style>




<div class="row m-4">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <center> Proyecto Mapas</center>
            </div>
            <div class="card-body">

                <div class="row">
                    <div class="col-9">

                    </div>
                    <div class="col-3">
                        Tipo de seleccion mapa
                        <select class="form-control" name="tipo_filtro_mapa" id="tipo_filtro_mapa" required="">
                            <option value="TODO" selected="">
                                TODO
                            </option>
                            <option value="FILTRO">
                                FILTRO
                            </option>
                        </select>
                    </div>


                </div>

                <br />

                <table class="display responsive nowrap" id="myTable" style="width:100%">
                    <thead>
                        <tr>
                            <th>IDC</th>
                            <th>Nombre</th>
                            <th>Ubicacion</th>
                            <th>Latitud</th>
                            <th>Longitud</th>
                            <th></th>
                        </tr>
                    </thead>

                </table>

                <br />
                <div class="row">
                    <div class="col-7">

                    </div>
                    <div class="col-5">

                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-8">
                        <select class="col-12 js-example-basic-single" name="cboFiguras" id="cboFiguras">
                        </select>
                    </div>
                    <div class="col-2">
                        <input class="col-12 btn btn-info" id="btnRestaurar" value="Ver" type="button" />
                    </div>
                    <div class="col-2">
                        <input class="col-12 btn btn-danger" id="btnEliminarFigura" value="Eliminar" type="button" />
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-10">
                        <input class="col-12 form-control" placeholder="Descripcion figura" id="figura_descripcion" value="" />
                        <div id="verificacionDescripcion" style="color:red;display:none">Descripcion incorrecta</div>
                    </div>
                    <div class="col-2">
                        <input class="col-12 btn btn-success" id="save_encoded" value="Guardar Figura" placeholder="Descripcion Figura" type="button" />
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-2">
                        <input style="float:right" class="col-12 form-control" id="clear_shapes" value="Limpiar figuras" type="button" />
                    </div>
                </div>

                <div class="form-group mt-3">
                    <div id="mapaPrincipal" style="width:100% ; height:300px;"></div>
                </div>
            </div>

        </div>

    </div>

</div>


<!-- Modal Editar datos -->
<div class="modal fade" id="FormModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="row col-12">
                    <div class="col-6">
                        <h5 id="exampleModalLabel">Creacion de Garantias</h5>
                    </div>

                    <div class="col-6" style="display: flex">
                        <div class="col-6">
                            <label for="cmbCadena">Cadena</label>
                            <select id="cmbCadena">
                                >
                            </select>
                        </div>
                        <div class="col-6">
                            <label for="cmbSegmento">Segmento</label>
                            <select id="cmbSegmento">
                            </select>
                        </div>
                    </div>

                </div>




            </div>
            <div class="modal-body">


                <div class="row">

                    <div class="col-sm-10" style=" margin-bottom: 20px;">
                    </div>

                    <div class="col-sm-2" style=" margin-bottom: 20px;">
                        <button type="button" class="col-sm-12 btn btn-info" onclick="consultarBusqueda()"><i class="fas fa-search"></i> Buscar </button>
                    </div>


                    <div class="col-sm-6">

                        <div class="form-group">
                            <div id="mapaEdicion" style="width:100% ; height:600px;"></div>
                        </div>

                    </div>





                    <div class="col-sm-6">


                        <input type="hidden" id="txtIdCliente" />



                        <div class="row">
                            <div class="col">
                                <label for="txtIDC">Identificacion de Cliente:</label>
                                <input type="text" class="form-control" placeholder="IDC" id="txtIDC">
                            </div>

                            <div class="col">
                                <label for="txtNombre">Nombre de Cliente:</label>
                                <input type="text" class="form-control" placeholder="Nombre" id="txtNombre">
                            </div>

                        </div>

                        <div class="row">

                            <div class="col">
                                <label for="txtLat">Latitud:</label>
                                <input type="text" class="form-control" id="txtLat">
                            </div>


                            <div class="col">
                                <label for="txtLong">Longitud:</label>
                                <input type="text" class="form-control" id="txtLong">
                            </div>


                        </div>

                        <div class="row">


                            <div class="col">
                                <label for="txtUbicacion">Ubicacion</label>
                                <input class="form-control" type="text" id="txtUbicacion" />

                            </div>

                            <div class="form-row align-items-center">
                                <div class="col-auto my-1">
                                    <label class="mr-sm-2" for="txtTipoReg">Tipo de Registro</label>
                                    <select class="custom-select mr-sm-2" id="txtTipoReg">

                                        <option value="1">Garantia</option>
                                        <option value="2">Agricola</option>

                                    </select>
                                </div>
                            </div>


                        </div>



                        <div class="row">


                            <div class="col">
                                <label for="txtNumG">Num. Gta</label>
                                <input class="form-control" type="text" id="txtNumG" />

                            </div>


                            <div class="form-row align-items-center">
                                <div class="col-auto my-1">
                                    <label class="mr-sm-2" for="txtTipPre">Tipo de Predio:</label>
                                    <select class="custom-select mr-sm-2" id="txtTipPre">

                                        <option value="1">Agricola</option>
                                        <option value="2">nose</option>

                                    </select>
                                </div>
                            </div>



                        </div>


                        <div class="row">

                            <div class="form-row align-items-center">
                                <div class="col-auto my-1">
                                    <label class="mr-sm-2" for="txtConUs">Tipo de Predio:</label>
                                    <select class="custom-select mr-sm-2" id="txtConUs">

                                        <option value="1">Propietario</option>
                                        <option value="2">alquiler</option>

                                    </select>
                                </div>
                            </div>

                            <div>
                                <label for="txtFecha">Fecha:</label>
                                <input class="form-control datepicker" type="text" id="txtFecha">

                            </div>


                        </div>


                        <div class="row">

                            <div class="col">
                                <label for="txtValC">Valor Comercial:</label>
                                <input class="form-control" type="text" id="txtValC" />

                            </div>

                            <div class="col">
                                <label for="txtSupTo">Superficie Total:</label>
                                <input class="form-control" type="number" id="txtSupTo" />

                            </div>

                            <div class="col">
                                <label for="txtUS">US$/Ha:</label>
                                <input class="form-control" type="number" id="txtUS" />

                            </div>

                        </div>


                        <div class="row">


                            <div class="col">
                                <label for="txtSupAg">Sup. Agricola Habilitadas:</label>
                                <input class="form-control" type="number" id="txtSupAg" />

                            </div>


                            <div class="col">
                                <label for="txtSupGan">Sup. Ganadera Habilitadas:</label>
                                <input class="form-control" type="number" id="txtSupGan" />

                            </div>


                        </div>


                        <div class="row">


                            <div class="col">
                                <label for="txtSucursal">Sucursal:</label>
                                <input class="form-control" type="text" id="txtSucursal" />

                            </div>


                            <div class="col">
                                <label for="txtRegion">Region</label>
                                <select class="form-control" id="txtRegion">
                                    <option value="Occidente">Occidente</option>
                                    <option value="Centro">Centro</option>
                                    <option value="Oriente">Oriente</option>
                                </select>

                            </div>


                        </div>


                        <div class="row">


                            <div class="col">
                                <label for="txtObs">Observaciones:</label>
                                <input class="form-control" type="text" id="txtObs" />

                            </div>

                        </div>

                    </div>


                </div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>



<!-- Modal vista datos -->
<div class="modal fade" id="FormModalVista" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Tiendas</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">


                <div class="row" style="margin:20px">
                    <div style="display: block;overflow-x: auto;white-space: nowrap;">
                        <table class="display responsive" id="myTable2" style="display: block;overflow-x: auto;white-space: nowrap;">
                            <thead>
                                <tr>
                                    <th>RUC</th>
                                    <th>Razon Social</th>
                                    <th>Region</th>
                                    <th>Sucursal</th>
                                    <th>Cadena</th>
                                    <th>Segmento</th>
                                </tr>
                            </thead>
                        </table>

                    </div>

                </div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>


@section scripts{

    <script src="~/Scripts/moment.js"></script>

    <!-- Codigo de mapas -->
    <script>
        var vMarker;
        var map;
        var latitudInicial = '-17.809512';
        var longitudInicial = '-63.199832';


        var shapes = [];
        var selected_shape = null;
        var byId = function (s) { return document.getElementById(s) };
        var clearSelection = function () {
            if (selected_shape) {
                selected_shape.set((selected_shape.type
                    ===
                    google.maps.drawing.OverlayType.MARKER
                ) ? 'draggable' : 'editable', false);
                selected_shape = null;
            }
        };
        var setSelection = function (shape) {
            clearSelection();
            selected_shape = shape;

            selected_shape.set((selected_shape.type
                ===
                google.maps.drawing.OverlayType.MARKER
            ) ? 'draggable' : 'editable', true);

        };
        var clearShapes = function () {
            for (var i = 0; i < shapes.length; ++i) {
                shapes[i].setMap(null);
            }
            shapes = [];
            limpiarFormasMapa();
        };


        //Iniciar mapas
        function iniciarMapas() {
            mapaPrincipal = crearMapa('mapaPrincipal', latitudInicial, longitudInicial);
            mapaEdicion = crearMapa('mapaEdicion', latitudInicial, longitudInicial);
            dibujarMarcador(mapaEdicion, latitudInicial, longitudInicial);
        }

        $.getScript("https://maps.googleapis.com/maps/api/js?key=AIzaSyAxFURWRz0_MMd6tRc0jIkEZikkb5_YI70&libraries=drawing,geometry&callback=iniciarMapas")
            .done(function (script, textStatus) {
                refrescarListadoMapa();
            })
            .fail(function (jqxhr, settings, exception) {
                console.log("Triggered ajaxError handler.");
            });


        function cargarPuntosGps(map) {
          $.ajax({
            url: "@Url.Action("ListarClientes", "Garantia")",
            type: 'GET',
            dataType: 'json',
            success: function (json) {
                dibujarListadoMarcadores(map,json.data);
            },
            error: function (xhr, status) {
                alert('Disculpe, existió un problema');
            }
          });
        }

        function limpiarFormasMapa() {
            var tipoFiltroMapa = $('#tipo_filtro_mapa').find(":selected").val();
            if (tipoFiltroMapa == "TODO") {
                refrescarListadoMapa();
            } else {
                cargarRegistrosSeleccionados();
            }
        }

        function crearMapa(idElement, lat, lon) {
            var goo = google.maps;
            mapa = new goo.Map(document.getElementById(idElement), {
                zoom: 6,
                center: new goo.LatLng(lat, lon),
                mapTypeId: goo.MapTypeId.ROADMAP
            });

            if (idElement == 'mapaPrincipal') {
                var drawman = new goo.drawing.DrawingManager({ map: mapa });

                goo.event.addListener(drawman, 'overlaycomplete', function (e) {
                    var shape = e.overlay;
                    shape.type = e.type;
                    goo.event.addListener(shape, 'click', function () {
                        setSelection(this);
                    });
                    setSelection(shape);
                    shapes.push(shape);
                });

                goo.event.addListener(mapa, 'click', clearSelection);

                document.getElementById("clear_shapes").addEventListener("click", clearShapes);

                goo.event.addDomListener(byId('save_encoded'), 'click', function () {
                    var data = IO.IN(shapes, true);
                    var descripcionFigura = byId('figura_descripcion').value;
                    if (descripcionFigura.length == 0) {
                        $('#verificacionDescripcion').css("display", "block");
                        verificacionDescripcion
                        return false;
                    } else {
                        $('#verificacionDescripcion').css("display", "none");
                    }
                    GuardarFigura(JSON.stringify(data), descripcionFigura);
                    clearShapes();
                });
              
                goo.event.addDomListener(byId('btnRestaurar'), 'click', function () {
                    if (this.shapes) {
                        for (var i = 0; i < this.shapes.length; ++i) {
                            this.shapes[i].setMap(null);
                        }
                    }

                    try {
                        var figura = JSON.parse($('#cboFiguras').val());
                        var datos = figura.datos;
                        this.shapes = IO.OUT(JSON.parse(datos), mapa);
                    }
                   catch (err) { }   
                });

            }

            return mapa;
        }

        var IO = {
            //returns array with storable google.maps.Overlay-definitions
            IN: function (arr,//array with google.maps.Overlays
                encoded//boolean indicating whether pathes should be stored encoded
            ) {
                var shapes = [],
                    goo = google.maps,
                    shape, tmp;

                for (var i = 0; i < arr.length; i++) {
                    shape = arr[i];
                    tmp = { type: this.t_(shape.type), id: shape.id || null };


                    switch (tmp.type) {
                        case 'CIRCLE':
                            tmp.radius = shape.getRadius();
                            tmp.geometry = this.p_(shape.getCenter());
                            break;
                        case 'MARKER':
                            tmp.geometry = this.p_(shape.getPosition());
                            break;
                        case 'RECTANGLE':
                            tmp.geometry = this.b_(shape.getBounds());
                            break;
                        case 'POLYLINE':
                            tmp.geometry = this.l_(shape.getPath(), encoded);
                            break;
                        case 'POLYGON':
                            tmp.geometry = this.m_(shape.getPaths(), encoded);

                            break;
                    }
                    shapes.push(tmp);
                }

                return shapes;
            },
            //returns array with google.maps.Overlays
            OUT: function (arr,//array containg the stored shape-definitions
                map//map where to draw the shapes
            ) {
                var shapes = [],
                    goo = google.maps,
                    map = map || null,
                    shape, tmp;

                for (var i = 0; i < arr.length; i++) {
                    shape = arr[i];

                    switch (shape.type) {
                        case 'CIRCLE':
                            tmp = new goo.Circle({ radius: Number(shape.radius), center: this.pp_.apply(this, shape.geometry) });
                            break;
                        case 'MARKER':
                            tmp = new goo.Marker({ position: this.pp_.apply(this, shape.geometry) });
                            break;
                        case 'RECTANGLE':
                            tmp = new goo.Rectangle({ bounds: this.bb_.apply(this, shape.geometry) });
                            break;
                        case 'POLYLINE':
                            tmp = new goo.Polyline({ path: this.ll_(shape.geometry) });
                            break;
                        case 'POLYGON':
                            tmp = new goo.Polygon({ paths: this.mm_(shape.geometry) });

                            break;
                    }
                    tmp.setValues({ map: map, id: shape.id })
                    shapes.push(tmp);
                }
                return shapes;
            },
            l_: function (path, e) {
                path = (path.getArray) ? path.getArray() : path;
                if (e) {
                    return google.maps.geometry.encoding.encodePath(path);
                } else {
                    var r = [];
                    for (var i = 0; i < path.length; ++i) {
                        r.push(this.p_(path[i]));
                    }
                    return r;
                }
            },
            ll_: function (path) {
                if (typeof path === 'string') {
                    return google.maps.geometry.encoding.decodePath(path);
                }
                else {
                    var r = [];
                    for (var i = 0; i < path.length; ++i) {
                        r.push(this.pp_.apply(this, path[i]));
                    }
                    return r;
                }
            },

            m_: function (paths, e) {
                var r = [];
                paths = (paths.getArray) ? paths.getArray() : paths;
                for (var i = 0; i < paths.length; ++i) {
                    r.push(this.l_(paths[i], e));
                }
                return r;
            },
            mm_: function (paths) {
                var r = [];
                for (var i = 0; i < paths.length; ++i) {
                    r.push(this.ll_.call(this, paths[i]));

                }
                return r;
            },
            p_: function (latLng) {
                return ([latLng.lat(), latLng.lng()]);
            },
            pp_: function (lat, lng) {
                return new google.maps.LatLng(lat, lng);
            },
            b_: function (bounds) {
                return ([this.p_(bounds.getSouthWest()),
                this.p_(bounds.getNorthEast())]);
            },
            bb_: function (sw, ne) {
                return new google.maps.LatLngBounds(this.pp_.apply(this, sw),
                    this.pp_.apply(this, ne));
            },
            t_: function (s) {
                var t = ['CIRCLE', 'MARKER', 'RECTANGLE', 'POLYLINE', 'POLYGON'];
                for (var i = 0; i < t.length; ++i) {
                    if (s === google.maps.drawing.OverlayType[t[i]]) {
                        return t[i];
                    }
                }
            }

        }

        function dibujarMarcador(map,lat,lon) {
            vMarker = new google.maps.Marker({
                position: new google.maps.LatLng(lat, lon),
                draggable: true
            });

            google.maps.event.addListener(vMarker, 'dragend', function (evt) {
                $("#txtLat").val(evt.latLng.lat().toFixed(6));
                $("#txtLong").val(evt.latLng.lng().toFixed(6));

                map.panTo(evt.latLng);
            });

            map.setCenter(vMarker.position);
            vMarker.setMap(map);
        }

        function dibujarListadoMarcadores(map, data) {
            var infowindow;
            for (i = 0; i < data.length; i++) {
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(data[i].Latitud, data[i].Longitud),
                    map: map
                });
                (function (i, marker) {
                    google.maps.event.addListener(marker, 'click', function () {
                        if (!infowindow) {
                            infowindow = new google.maps.InfoWindow();
                        }
                        infowindow.setContent("IDC: " + data[i].IDC +"<br/>Nombre de Cliente: " + data[i].Nombre + "<br/>Ubicacion: " + data[i].Ubicacion);
                        infowindow.open(map, marker);
                    });
                })(i, marker);
            }

        }

    </script>
    <!-- Final Codigo de mapas -->
    <!-- Codigo de validaciones -->
    <script>
        //validar datos
        $("#txtValC").on({
            "focus": function (event) {
                $(event.target).select();
            },
            "keyup": function (event) {
                $(event.target).val(function (index, value) {
                    return value.replace(/\D/g, "")
                        .replace(/([0-9])([0-9]{2})$/, '$1.$2')
                        .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
                });
            }
        });

    </script>
    <!-- Final Codigo de validaciones -->
    <!-- Codigo de carga de datos -->
    <script>

        $(document).ready(function () {

            $('#cmbCadena').on('change', function () {
                verificarComboCadenaSegmento();
            });

            $('#cmbSegmento').on('change', function () {
                verificarComboCadenaSegmento();
            });

        });


        function verificarComboCadenaSegmento()
        {
            var $valorCmbCadena = '';
            var $valorCmbSegmento = '';

            $valorCmbCadena = $('#cmbCadena').val().toLowerCase();
            $valorCmbSegmento = $('#cmbSegmento').val().toLowerCase();

            if ($valorCmbCadena.toLowerCase() === 'agricultura' && $valorCmbSegmento.toLowerCase() === 'produccion') {
                $('#txtSupAg').attr('readonly', true);
                $('#txtSupGan').attr('readonly', true);
                $('#txtSupAg').val('');
                $('#txtSupGan').val('');
            } else {
                $('#txtSupAg').attr('readonly', false);
                $('#txtSupGan').attr('readonly', false);
            }
        }

        var tabla_persona;
         $(document).ready( function () {
             tabla_persona = $('#myTable').DataTable({
                 "ajax": {
                    "url": "@Url.Action("ListarClientes", "Garantia")",
                    "type": "GET",
                    "datatype": "json"
                },
                 "columns": [
                    { "data": "IDC" },
                    { "data": "Nombre" },
                    { "data": "Ubicacion" },
                    { "data": "Latitud" },
                    { "data": "Longitud" },
                    {
                        "data": "idCliente", "render": function (data) {
                            return "<button class='btn btn-primary btn-sm editar' type='button' onclick='abrirModal(" + data + ")'><i class='fas fa-pen'></i></button>" +
                                "<button class='btn btn-danger btn-sm ml-2 eliminar' type='button'  onclick='Eliminar(" + data + ")'><i class='fa fa-trash'></i></button>"
                     },
                        "orderable": false,
                        "searchable": false,
                        "width": "150px"
                    }
                ],
                 dom: 'Bfrtip',
                buttons: [
                    {
                        text: 'Agregar Nuevo',
                        attr: { class: 'btn btn-success btn-sm' },
                        action: function (e, dt, node, config) {
                            abrirModal(0)
                        }
                    },
                    {
                        text: 'Exportar a excel',
                        attr: { class: 'btn btn-info btn-sm' },
                        action: function () {
                            exportarExcel()
                        }
                    },
                    {
                        text: 'Limpiar seleccion',
                        attr: {
                            class: 'btn btn-dark btn-sm limpiar', style:'background-color: darkgoldenrod;' },
                        action: function (e, dt, node, config) {
                            limpiarSeleccion()
                        }
                    },
                 ],
                 "language": {
                     "url": "@Url.Content("~/Content/datatable/idioma/datatable.es-ES.json")"
                 }

            });
         });

        var tabla_persona2;
         $(document).ready( function () {
             tabla_persona2 = $('#myTable2').DataTable({
                 "ajax": {
                    "url": "@Url.Action("ListarVistaGarantia", "Garantia")",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "IDCn" },
                    { "data": "Nombres" },
                    { "data": "region" },
                    { "data": "sucursal" },
                    { "data": "cadena" },
                    { "data": "segmento" },
                    {
                         "render": function (data, type, row) {
                            return '<button class="btn btn-primary btn-sm" type="button" onclick="cargarDatosCliente(' + "'" + row['IDCn'] + "'" + ",'" + row['Nombres'] + "'" + ",'" + row['sucursal'] + "','" + row['region'] + "','" + row['cadena']  + "','" + row['segmento'] + "'"  +')">Seleccionar</button>'

                        },
                        "orderable": false,
                        "searchable": false,
                        "width": "150px"
                    }
                ],
                 dom: 'Bfrtip',
                 buttons: [

                 ],
                 "language": {
                     "url": "@Url.Content("~/Content/datatable/idioma/datatable.es-ES.json")"
                 }

            });
         });

        function refrescarListadoMapa() {
            mapaPrincipal = crearMapa('mapaPrincipal', latitudInicial, longitudInicial);
            cargarPuntosGps(mapaPrincipal);
        }

        function refrescarListadoMapaRegistrosSeleccionados(data) {
            mapaPrincipal = crearMapa('mapaPrincipal', latitudInicial, longitudInicial);
            dibujarListadoMarcadores(mapaPrincipal, data);
        }

        function abrirModal($idcliente) {

            $("#txtIdCliente").val($idcliente);
            if ($idcliente != 0) {

                jQuery.ajax({
                    url: "@Url.Action("ObtnerPorIdCliente", "Garantia")" + "?idcliente=" + $idcliente,
                    type: "GET",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {

                        if (data != null) {
                            $("#txtIDC").val(data.IDC);
                            $("#txtNombre").val(data.Nombre);
                            $("#txtLat").val(data.Latitud);
                            $("#txtLong").val(data.Longitud);
                            $("#txtUbicacion").val(data.Ubicacion);
                            $("#txtTipoReg").val(data.TipoReg);
                            $("#txtNumG").val(data.NumGa);
                            $("#txtTipPre").val(data.TipoPre);
                            $("#txtConUs").val(data.CondUso);
                            //$("#txtFecha").val(moment(data.avaluo).format('YYYY-MM-DD'));
                            $("#txtFecha").val(moment(data.avaluo).format('DD-MM-YYYY'));
                            $("#txtValC").val(data.valCom);
                            $("#txtSupTo").val(data.supTot);
                            $("#txtUS").val(data.supUsa);
                            $("#txtSupAg").val(data.SupAgHab);
                            $("#txtSupGan").val(data.SupGaHab);
                            $("#txtObs").val(data.obs);
                            $("#txtSucursal").val(data.sucursal);
                            $("#txtRegion").val(data.region);
                            var map = crearMapa('mapaEdicion', data.Latitud, data.Longitud);
                            dibujarMarcador(map, data.Latitud, data.Longitud);
                        }

                    }
                });
            } else {


                $("#txtIDC").val("");
                $("#txtNombre").val("");
                $("#txtLat").val("");
                $("#txtLong").val("");
                $("#txtUbicacion").val("");
                $("#txtTipoReg").val("");
                $("#txtNumG").val("");
                $("#txtTipPre").val("");
                $("#txtConUs").val("");
                $("#txtFecha").val(moment(new Date()).format("YYYY-MM-DD"));
                $("#txtValC").val("");
                $("#txtSupTo").val("");
                $("#txtUS").val("");
                $("#txtSupAg").val("");
                $("#txtSupGan").val("");
                $("#txtObs").val("");
                $("#txtSucursal").val("");
                $("#txtRegion").val("");
            }

            $('#FormModal').modal('show');

            var map = crearMapa('mapaEdicion', "-16.191613", "-64.496218");
            dibujarMarcador(map, "-16.191613", "-64.496218");

        }

        function convertirFechaFormatoBaseDatos(datosFecha) {
            var dateMomentObject = moment(datosFecha, "DD/MM/YYYY");
            var resultado = moment(dateMomentObject).format('YYYY-MM-DD');
            return resultado;
        }

        //crud cliente
        function Guardar() {

            var $data = {
                oCliente: {
                    idCliente: parseInt($("#txtIdCliente").val()),
                    IDC: $("#txtIDC").val(),
                    Nombre: $("#txtNombre").val(),
                    Ubicacion: $("#txtUbicacion").val(),
                    Latitud: $("#txtLat").val(),
                    Longitud: $("#txtLong").val(),
                    TipoReg: $("#txtTipoReg").val(),
                    NumGa: $("#txtNumG").val(),
                    TipoPre: $("#txtTipPre").val(),
                    CondUso: $("#txtConUs").val(),
                    avaluo: convertirFechaFormatoBaseDatos($("#txtFecha").val()),
                    valCom: parseInt($("#txtValC").val()),
                    supTot: parseInt($("#txtSupTo").val()),
                    supUsa: parseInt($("#txtUS").val()),
                    SupAgHab: parseInt($("#txtSupAg").val()),
                    SupGaHab: parseInt($("#txtSupGan").val()),
                    obs: $("#txtObs").val(),
                    sucursal: $("#txtSucursal").val(),
                    region: $("#txtRegion").val(),
                    cadena: $("#cmbCadena").val(),
                    segmento: $("#cmbSegmento").val(),
                }
            }

            jQuery.ajax({
                url: "@Url.Action("Guardar", "Garantia")",
                type: "POST",
                data: JSON.stringify($data),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    if (data.resultado) {
                        tabla_persona.ajax.reload();
                        $('#FormModal').modal('hide');
                        refrescarListadoMapa();
                    } else {
                        alert("No se pudo guardar los cambios");
                    }
                },
                error: function (error) {
                    console.log(error)
                },
                beforeSend: function () {

                }
            });

        }

        function Eliminar($idpersona) {
            if (confirm("¿Realmente desea eliminar?")) {
                var $data = {
                    idCliente: $idpersona,
                };
                jQuery.ajax({
                    url: "@Url.Action("Eliminar", "Garantia")",
                    type: "POST",
                    data: JSON.stringify($data),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data, textStatus, jqXHR) {

                        if (data.resultado) {
                            tabla_persona.ajax.reload();
                        }
                    }
                });


            }
        }

        function exportarExcel() {
            window.location.href = "@Url.Action("exportExcel", "Garantia")";
        }

        function consultarBusqueda() {
            $('#FormModalVista').modal('show');
            $('#FormModal').modal('hide');
              tabla_persona2.ajax.reload();
        }

        function cargarDatosCliente(IDCn, Nombres, sucursal, region,cadena, segmento) {

            $("#txtIdCliente").val(0);
            $("#txtIDC").val(IDCn);
            $("#txtNombre").val(Nombres);
            $("#txtLat").val("");
            $("#txtLong").val("");
            $("#txtUbicacion").val("");
            $("#txtTipoReg").val("");
            $("#txtNumG").val("");
            $("#txtTipPre").val("");
            $("#txtConUs").val("");
            $("#txtFecha").val(moment(new Date()).format('YYYY-MM-DD'));
            $("#txtValC").val("");
            $("#txtSupTo").val("");
            $("#txtUS").val("");
            $("#txtSupAg").val("");
            $("#txtSupGan").val("");
            $("#txtObs").val("");
            $("#txtSucursal").val(sucursal);
            $("#txtRegion").val(region);
            $("#cmbCadena").val(cadena.toLowerCase());
            $("#cmbSegmento").val(segmento.toLowerCase());

            $('#FormModal').modal('show');
            $('#FormModalVista').modal('hide');

            verificarComboCadenaSegmento();
        }

        function obtenerCadenas() {
            return  $.ajax({
            url: "@Url.Action("ListarCadenas", "Garantia")",
            type: 'GET',
                dataType: 'json',
            }).then(response => response.data);
        }

        function obtenerSegmentos() {
            return  $.ajax({
            url: "@Url.Action("ListarSegmentos", "Garantia")",
            type: 'GET',
                dataType: 'json',
            }).then(response => response.data);
        }

        //crud figuras
        function listarFiguras() {
            return  $.ajax({
            url: "@Url.Action("Listar", "FigurasMapa")",
            type: 'GET',
                dataType: 'json',
            }).then(response => response.data);
        }

        async function cargarComboFiguras() {
            var datos = await listarFiguras()

            var $dropdown = $("#cboFiguras");
            $dropdown.empty();
            $dropdown.append($("<option />").val('0').text('Seleccione una opcion'));
            $.each(datos, function () {
                var datos = JSON.stringify(this);
                $dropdown.append($("<option />").val(datos).text(this.descripcion));
            });

            console.log(datos);
        }

        function GuardarFigura(datosFigura, descripcion) {

            var $data = {
                datos: {
                    id: 0,
                    descripcion: descripcion,
                    datos: datosFigura,
                }
            }

            if (datosFigura.length == 2) {
                return false;
            }

            jQuery.ajax({
                url: "@Url.Action("Guardar", "FigurasMapa")",
                type: "POST",
                data: JSON.stringify($data),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    cargarComboFiguras();
                    $('#figura_descripcion').val('');
                    alert('Datos guardados');
                },
                error: function (error) {
                    console.log(error)
                },
                beforeSend: function () {

                }
            });

        }

        function EliminarFigura($id) {
            if (confirm("¿Realmente desea eliminar?")) {
                var $data = {
                    id: $id,
                };
                jQuery.ajax({
                    url: "@Url.Action("Eliminar", "FigurasMapa")",
                    type: "POST",
                    data: JSON.stringify($data),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data, textStatus, jqXHR) {

                        if (data.resultado) {
                            cargarComboFiguras();
                            alert('Datos eliminados');
                            limpiarFormasMapa();
                        }
                    }
                });
            }
        }

        async function cargarComboSegmento() {
            var datos = await obtenerSegmentos()

            var $dropdown = $("#cmbSegmento");
            $.each(datos, function () {
                $dropdown.append($("<option />").val(this.descripcion).text(this.descripcion));
            });
        }

        async function cargarComboCadena() {
            var datos = await obtenerCadenas()

            var $dropdown = $("#cmbCadena");
            $.each(datos, function () {
                $dropdown.append($("<option />").val(this.descripcion).text(this.descripcion));
            });
        }

        cargarComboSegmento();
        cargarComboCadena();
        cargarComboFiguras();


    </script>
    <!-- Final Codigo de carga de datos -->
    <!-- Codigo de seleccion de puntos gps -->
    <script>
        $(document).ready(function () {
            $('#tipo_filtro_mapa').on('change', function () {
                if (this.value == "TODO") {
                    limpiarSeleccion();
                    refrescarListadoMapa();
                } else {
                    mapaPrincipal = crearMapa('mapaPrincipal', latitudInicial, longitudInicial);
                }
            });

        });

        //Eliminar figura
        $("#btnEliminarFigura").click(function () {
            var figura = JSON.parse($('#cboFiguras').val());
            var id = figura.id;
            EliminarFigura(id);
            
        });

        //Filtro seleccion
        $("#myTable").on("click", "td", function () {
            if ($(this).has('button').length == 0) {
                var tipoFiltroMapa = $('#tipo_filtro_mapa').find(":selected").val();

                if (tipoFiltroMapa != "TODO") {
                    var tr = $(this).closest('tr');
                    tr.toggleClass('selected');
                    cargarRegistrosSeleccionados();
                }
            }
        });

        $('#FormModal').on('hidden.bs.modal', function () {
            var tipoFiltroMapa = $('#tipo_filtro_mapa').find(":selected").val();

            if (tipoFiltroMapa == "TODO") {
                refrescarListadoMapa();
            }

        });


        function limpiarSeleccion() {
            $('.selected').each(function () {
                $(this).toggleClass('selected');
                mapaPrincipal = crearMapa('mapaPrincipal', latitudInicial, longitudInicial);
            });

        }

        function cargarRegistrosSeleccionados() {
            mapaPrincipal = crearMapa('mapaPrincipal', latitudInicial, longitudInicial);
            $('.selected td:first-child').each(function () {
                var table = $('#myTable').DataTable();
                arrayResultado = [];
                var tabla = table.rows('#myTable');

                for (i = 0; i < table.data().length; i++) {
                    row = tabla.row(i);

                    var nombreClase = row.node().className;

                    if (nombreClase.includes('selected')) {
                        var datosRow = row.data();
                        arrayResultado.push(datosRow);
                    }
                }

                refrescarListadoMapaRegistrosSeleccionados(arrayResultado);
            });
        }

    </script>
    <!-- Final Codigo de seleccion de puntos gps -->


    <script>
        $(function () {
            $(".datepicker").datepicker({
                dateFormat: "dd-mm-yy"
            });
        });

        $(document).ready(function () {
            $('.js-example-basic-single').select2();
        });
    </script>

}


